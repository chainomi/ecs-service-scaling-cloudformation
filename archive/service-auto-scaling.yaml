---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This template deploys an AutoScaling Launch Config and Group
Parameters: 

  PMServerEnv:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: "String"
    AllowedValues: 
      - "dev"
      - "staging"
      - "prod"

  PMKeyName:
    Description: "Enter an existing EC2 KeyPair. Default is MyEC2Key"
    Type: "String"

  PMInstanceType: 
    Description: "Enter t2.micro or m1.small. Default is t2.micro."
    Type: "String"
    AllowedValues: 
      - "t2.micro"
      - "m1.small"

  PMPrivateSubnets:
    Description: "Subnets to launch instances into"
    Type: "List<AWS::EC2::Subnet::Id>"

  PMAPPHostSG:
    Description: "Select the Security Group to use for the EC2 hosts"
    Type: "AWS::EC2::SecurityGroup::Id"

  PMWEBDOMAIN:
    Description: "A reference to the Application domain name"
    Type: "String"

  PMAPPLoadBalancer:
    Description: "A reference to the Application Load Balancer"
    Type: "String"

  PMIAMECSInstanceProfile:
    Description: "A reference to the IamInstanceProfile"
    Type: "String"

  PMIAMECSServiceRole:
    Description: "A reference to the Iam ECS Service Role"
    Type: "String"

  PMIAMScalableTargetRole:
    Description: "A reference to the Iam ECS Service Role"
    Type: "String"

  PMRegionAMI:
    Description: "A reference to the Region AMI"
    Type: "String"

  PMASMIN:
    Description: "A reference to the MinSize"
    Type: "String"

  PMASMAX:
    Description: "A reference to the MaxSize"
    Type: "String"

  PMASDES:
    Description: "A reference to the DesiredCapacity"
    Type: "String"

####### Resources Setup #######
Resources:

  # Amazon EC2 Container Service (ECS) is a container management service that supports Docker containers 
  # and allows you to easily run applications on a managed cluster of Amazon EC2 instances.
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Ref "PMServerEnv"

#################################################################
# Task Set : 1
#################################################################

  ECSServiceScalableTargetSet1:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: !Ref "PMASMAX"
      MinCapacity: !Ref "PMASMIN"
      ResourceId:
        Fn::Join:
        - "/"
        - - "service"
          - Ref: "ECSCluster"
          - Fn::GetAtt:
            - "ECSServiceSet1"
            - "Name"
      RoleARN: !Ref "PMIAMScalableTargetRole"
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"

  ECSServiceSet1:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref "ECSCluster"
      DeploymentConfiguration:
        MaximumPercent: '200'
        MinimumHealthyPercent: '100'
      DesiredCount: !Ref "PMASDES"
      TaskDefinition: !Ref "ECSTaskDefinitionSet1"
      LoadBalancers:
      - ContainerName: 'ecs-php-set1'
        ContainerPort: '9000'
        LoadBalancerName: !Ref "PMAPPLoadBalancer"
      Role: !Ref "PMIAMECSServiceRole"
    DependsOn:
      - "ECSTaskDefinitionSet1"
      - "AppScalingGroup"

  ECSTaskDefinitionSet1:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        -
          Name: "ecs-php-set1"
          MountPoints:
            -
              SourceVolume: "my-app-vol"
              ContainerPath: !Sub "/home/www/public_html/${PMWEBDOMAIN}"
          Image: "thinegan/debian-php5"
          Cpu: "300"
          PortMappings:
            -
              ContainerPort: "9000"
              HostPort: "9001"
          EntryPoint:
            - "/usr/bin/supervisord"
            - "-c"
            - "/etc/supervisor/supervisord.conf"
          Memory: "300"
          Essential: "true"
      Volumes:
        -
          Host:
            SourcePath: !Sub "/home/www/public_html/${PMWEBDOMAIN}"
          Name: "my-app-vol"
      Family: "Task-set1"



#################################################################
# ECS Scaling Policy Set 1
#################################################################

  ECSScaleUpPolicySet1:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-ecs-scale-up'
      PolicyType: "StepScaling"
      ScalingTargetId: !Ref "ECSServiceScalableTargetSet1"
      StepScalingPolicyConfiguration: 
        AdjustmentType: "PercentChangeInCapacity"
        Cooldown: '300'
        MinAdjustmentMagnitude: '1'
        StepAdjustments:
        - MetricIntervalLowerBound: '0'
          ScalingAdjustment: '100'

  ECSScaleDownPolicySet1:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-ecs-scale-down'
      PolicyType: "StepScaling"
      ScalingTargetId: !Ref "ECSServiceScalableTargetSet1"
      StepScalingPolicyConfiguration: 
        AdjustmentType: "PercentChangeInCapacity"
        Cooldown: '300'
        MinAdjustmentMagnitude: '1'
        StepAdjustments:
        - MetricIntervalLowerBound: '0'
          ScalingAdjustment: '-100'



 

  # Auto ScalingUp Policy - Basic Setup
  APPServerScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName:
        Ref: "AppScalingGroup"
      Cooldown: '300'
      ScalingAdjustment: '1'

  # Auto ScalingDown Policy - Basic Setup
  APPServerScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName:
        Ref: "AppScalingGroup"
      Cooldown: '300'
      ScalingAdjustment: '-1'
      

Outputs:

  ECSScaleUpPolicySet1: 
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleUpPolicySet1"

  ECSScaleDownPolicySet1: 
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleDownPolicySet1"

  ECSScaleUpPolicySet2: 
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleUpPolicySet2"

  ECSScaleDownPolicySet2:
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleDownPolicySet2"

  ECSScaleUpPolicySet3:
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleUpPolicySet3"

  ECSScaleDownPolicySet3:
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "ECSScaleDownPolicySet3"

  AppScalingGroup: 
    Description: "Auto Scaling Group Reference ID"
    Value: !Ref "AppScalingGroup"

  APPServerScaleUpPolicy: 
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "APPServerScaleUpPolicy"

  APPServerScaleDownPolicy: 
    Description: "Auto Scaling Down Policy Reference ID"
    Value: !Ref "APPServerScaleDownPolicy"

